#+title: Notes

* Installing packages automatically from a list

- https://stackoverflow.com/questions/10092322/how-to-automatically-install-emacs-packages-by-specifying-a-list-of-package-name

- [[http://endlessparentheses.com/new-in-package-el-in-emacs-25-1-user-selected-packages.html][New in Emacs 25.1: User-selected packages]]


* Older org releases

 - [[http://orgmode.org/cgit.cgi/org-mode.git/refs/]]


* Emacs load-path


https://www.emacswiki.org/emacs/LoadPath

#+BEGIN_SRC elisp :tangle no
(let ((default-directory  "~/.emacs.d/lisp/"))
  (normal-top-level-add-subdirs-to-load-path))
#+END_SRC
* Structure

#+BEGIN_EXAMPLE
 /
  src/
   custom/    ; org-files or el files
   init.org
   lib/       ; only el files

  build/
   code/
    init.el   ; runs when emacs starts
    deploy.el ; runs when emacs is deployed
    custom/   ; customizations to various modes
    elpa -> 
    lib/
     elpa/
     git/
     other/

   
    

#+END_EXAMPLE

* Code for modular load-path spec

#+BEGIN_SRC emacs-lisp :eval no :tangle no
(let ((default-directory (file-name-directory load-file-name)))
	  (normal-top-level-add-subdirs-to-load-path))

(defun foo (s)
  (cond ((stringp s) (list s))
		((listp s)
		 (let ((parent (car s))
			   (children (mapcan (lambda (v) (foo v))  (cdr s))))
		   (mapcar (lambda (child) 
					 (expand-file-name child parent))
				   children)))))


(setq lf-name "~/org/")

(file-name-directory lf-name)
(defvar load-path-rel-dirs
  (foo `(,(file-name-directory lf-name)
		 ("custom"
		  "dired"
		  "faces"
		  "misc"
		  ("org-mode"
		   ("contrib" 
			"dblock" 
			"ox-bibtex"
			)
		   )
		  "racket"
		  "shell"
		  )
		 )
	   )
	 

	

	
    
    ("dired/" 
	 "faces/"
	 "misc/" 
	 ("org-mode/" 
	  ("dblock"))
   "racket"))

#+END_SRC

* Structure of init-file

